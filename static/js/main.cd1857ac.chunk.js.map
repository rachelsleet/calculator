{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["buttons","id","display","type","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","currentFormula","currentDisplay","clearDisplayNext","decimalSelected","registerInput","bind","assertThisInitialized","evaluateFormula","script","document","createElement","src","async","body","appendChild","console","log","prevProps","prevState","formula","Function","e","target","className","setState","concat","innerHTML","oldDisplay","oldFormula","toString","match","slice","_this2","react_default","a","App_Display","message","map","button","index","App_CalculatorButton","register","value","React","Component","CalculatorButton","onClick","key","Display","Boolean","window","location","hostname","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cd1857ac.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst buttons = [\n  {\n    \"id\":\"divide\",\n    \"display\":\"/\",\n    \"type\":\"operator\"\n  },\n  {\n    \"id\":\"nine\",\n    \"display\":\"9\",\n    \"type\":\"number\"\n  },\n  {\n    \"id\":\"eight\",\n    \"display\":\"8\",\n    \"type\":\"number\"\n  },\n  {\n    \"id\":\"seven\",\n    \"display\":\"7\",\n    \"type\":\"number\"\n  },\n  {\n    \"id\":\"multiply\",\n    \"display\":\"x\",\n    \"type\":\"operator\"\n  },\n  {\n    \"id\":\"six\",\n    \"display\":\"6\",\n    \"type\":\"number\"\n  },\n\n  {\n    \"id\":\"five\",\n    \"display\":\"5\",\n    \"type\":\"number\"\n  },\n  {\n    \"id\":\"four\",\n    \"display\":\"4\",\n    \"type\":\"number\"\n  },\n  {\n    \"id\":\"subtract\",\n    \"display\":\"-\",\n    \"type\":\"operator\"\n  },\n  {\n    \"id\":\"three\",\n    \"display\":\"3\",\n    \"type\":\"number\"\n  },\n  {\n    \"id\":\"two\",\n    \"display\":\"2\",\n    \"type\":\"number\"\n  },\n  {\n    \"id\":\"one\",\n    \"display\":\"1\",\n    \"type\":\"number\"\n  },\n\n  {\n    \"id\":\"add\",\n    \"display\":\"+\",\n    \"type\":\"operator\"\n  },\n  {\n    \"id\":\"decimal\",\n    \"display\":\".\",\n    \"type\":\"decimal\"\n  },\n  {\n    \"id\":\"clear\",\n    \"display\":\"AC\",\n    \"type\":\"clear\"\n  },\n  {\n    \"id\":\"zero\",\n    \"display\":\"0\",\n    \"type\":\"number\"\n  },\n\n  {\n    \"id\":\"equals\",\n    \"display\":\"=\",\n    \"type\":\"equals\"\n  }\n];\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentFormula: '',\n      currentDisplay: '0',\n      clearDisplayNext: true,\n      decimalSelected: false\n    }\n    this.registerInput = this.registerInput.bind(this);\n    this.evaluateFormula = this.evaluateFormula.bind(this);\n\n  }\n  componentDidMount() {\n        const script = document.createElement(\"script\");\n        script.src = \"https://cdn.freecodecamp.org/testable-projects-fcc/v1/bundle.js\";\n        script.async = true;\n        script.type = 'text/javascript'\n        document.body.appendChild(script);\n        console.log(script);\n  }\n  componentDidUpdate(prevProps,prevState) {\n    if (this.state !== prevState) {\n      console.log(this.state);\n    }\n  }\n  evaluateFormula(formula) {\n    // eslint-disable-next-line\n    return Function('\"use strict\";return (' + formula + ')')();\n  }\n  registerInput(e) {\n    switch(e.target.className) {\n      case \"number\": {\n        console.log(\"number pressed\");\n        if (this.state.clearDisplayNext) {\n          this.setState({\n            currentDisplay: `${e.target.innerHTML}`,\n            currentFormula: `${e.target.innerHTML}`\n          });\n          if (e.target.innerHTML !== \"0\") {\n            this.setState({\n              clearDisplayNext: false\n            });\n          }\n        }\n        else {\n          this.setState({\n            currentDisplay: `${this.state.currentDisplay}${e.target.innerHTML}`,\n            currentFormula: `${this.state.currentFormula}${e.target.innerHTML}`\n          });\n        }\n        break;\n      }\n      case \"operator\": {\n        console.log(\"operator pressed\");\n        var oldDisplay = this.state.currentDisplay;\n        var oldFormula = this.state.currentFormula;\n\n        if (this.state.currentFormula.toString().match(/[*/+-]$/)){\n          console.log('operator already selected');\n          oldDisplay = oldDisplay.slice(0,-1);\n          oldFormula =  oldFormula.slice(0,-1);\n        }\n        if (e.target.innerHTML === \"x\") {\n          this.setState({\n            currentDisplay: `${oldDisplay}${e.target.innerHTML}`,\n            currentFormula: `${oldFormula}*`,\n            decimalSelected: false,\n          });\n        }\n        else {\n          this.setState({\n            currentDisplay: `${oldDisplay}${e.target.innerHTML}`,\n            currentFormula: `${oldFormula}${e.target.innerHTML}`,\n            decimalSelected: false\n          });\n        }\n        console.log(this.state)\n        break;\n      }\n      case \"decimal\": {\n        console.log(\"decimal button pressed\");\n        if (!this.state.decimalSelected) {\n          console.log('decimal had not yet been pressed')\n          this.setState({\n            currentDisplay: `${this.state.currentDisplay}${e.target.innerHTML}`,\n            currentFormula: `${this.state.currentFormula}${e.target.innerHTML}`,\n            decimalSelected: true\n          })\n        }\n        break;\n      }\n      case \"clear\": {\n        console.log(\"AC button pressed\");\n        this.setState({\n          currentDisplay: \"0\",\n          currentFormula: \"\",\n          clearDisplayNext: true,\n          decimalSelected: false\n        });\n        break;\n      }\n      case \"equals\": {\n        console.log(\"equals pressed\");\n        this.setState({\n          currentDisplay: this.evaluateFormula(this.state.currentFormula),\n          currentFormula: this.evaluateFormula(this.state.currentFormula),\n          decimalSelected: false\n        });\n        break;\n      }\n      default: {\n        console.log(\"something else pressed\");\n        this.setState({\n          currentDisplay: `${this.state.currentDisplay}${e.target.innerHTML}`,\n          currentFormula: `${this.state.currentFormula}${e.target.innerHTML}`\n        });\n      }\n    }\n\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          Give your brain a break...\n        </header>\n        <Display message={this.state.currentDisplay}/>\n        <div id=\"buttons\">\n        {buttons.map((button,index) => {\n          return (\n            <CalculatorButton register={this.registerInput} value={button.display} id={button.id} type={button.type}/>\n          )\n        })}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst CalculatorButton = (props) => {\n  return (\n    <button onClick={props.register} id={props.id} key={props.id} className={props.type}>{props.value}</button>\n  )\n}\n\nconst Display = (props) => {\n  return (\n    <div id=\"display\">{props.message}</div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}